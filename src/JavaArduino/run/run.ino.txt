#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
  #include <avr/power.h>
#endif

#define PIN 6

// Parameter 1 = number of pixels in strip
// Parameter 2 = Arduino pin number (most are valid)
// Parameter 3 = pixel type flags, add together as needed:
//   NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs)
//   NEO_KHZ400  400 KHz (classic 'v1' (not v2) FLORA pixels, WS2811 drivers)
//   NEO_GRB     Pixels are wired for GRB bitstream (most NeoPixel products)
//   NEO_RGB     Pixels are wired for RGB bitstream (v1 FLORA pixels, not v2)
//   NEO_RGBW    Pixels are wired for RGBW bitstream (NeoPixel RGBW products)
Adafruit_NeoPixel strip = Adafruit_NeoPixel(74*44, PIN, NEO_GRB + NEO_KHZ800);

// IMPORTANT: To reduce NeoPixel burnout risk, add 1000 uF capacitor across
// pixel power leads, add 300 - 500 Ohm resistor on first pixel's data input
// and minimize distance between Arduino and first pixel.  Avoid connecting
// on a live circuit...if you must, connect GND first.

int xmax = 73;
int ymax = 43;

int logo [44][74][3] = 
{
{{2,2,2},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{0,2,1},{1,1,3},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{0,0,0},{1,1,1},{1,1,1},{33,31,32},{105,101,102},{35,33,34},{1,1,1},{2,2,2},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{1,1,1},{0,0,0},{1,1,1},{1,1,1},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{0,1,0},{1,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,2},{0,0,0},{0,0,0},{80,78,79},{132,128,129},{104,100,101},{10,10,10},{0,1,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{2,0,1},{0,0,0},{0,0,0},{0,0,0},{7,7,7},{86,84,85},{136,132,133},{135,131,132},{133,129,130},{54,52,53},{0,0,0},{0,1,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,2},{3,4,6},{57,72,105},{8,9,13},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{0,1,0},{0,0,0},{0,0,0},{1,1,1},{85,83,84},{133,129,130},{136,132,133},{135,131,132},{135,131,132},{125,121,122},{21,21,21},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,2},{1,0,0},{0,0,0},{0,0,0},{1,2,4},{53,70,98},{111,143,204},{63,81,117},{1,1,3},{0,0,0},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{9,9,9},{99,95,96},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{97,95,96},{4,4,4},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{4,5,9},{64,84,121},{112,142,204},{114,145,209},{104,133,191},{22,28,40},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{6,6,6},{92,90,91},{134,130,131},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{133,131,132},{136,132,133},{130,126,127},{45,45,45},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{2,4,3},{37,39,38},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,3},{60,78,114},{113,145,206},{113,144,208},{114,145,209},{113,144,208},{82,106,152},{2,2,4},{0,0,0},{0,0,0},{9,9,9},{105,103,104},{133,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{133,131,132},{114,112,113},{5,5,5},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{99,103,106},{210,211,215},{62,63,65},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{5,9,12},{70,89,129},{111,142,206},{114,145,209},{114,145,209},{115,145,209},{113,144,208},{113,144,208},{48,62,89},{0,0,0},{12,12,12},{97,95,96},{135,131,132},{133,131,132},{135,131,130},{135,131,132},{136,132,133},{135,131,132},{133,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{82,82,82},{2,2,2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{2,2,4},{107,108,112},{220,225,229},{221,224,229},{177,181,184},{14,16,15},{0,0,0},{0,0,2},{0,0,0},{0,0,0},{1,3,2},{71,90,130},{113,143,207},{114,145,209},{114,145,209},{113,144,208},{114,145,209},{114,145,209},{110,144,207},{82,106,152},{14,15,17},{115,111,112},{135,131,130},{134,132,133},{136,132,133},{136,132,133},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{128,124,125},{36,34,35},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{113,114,118},{215,218,223},{220,225,229},{221,226,230},{217,220,225},{100,101,105},{0,0,0},{0,0,0},{0,0,0},{9,12,17},{73,95,136},{114,145,209},{114,145,209},{113,144,208},{114,145,209},{114,146,207},{114,145,209},{111,143,204},{71,90,132},{26,27,31},{103,101,102},{135,131,132},{133,131,132},{135,131,130},{136,132,133},{133,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{133,131,132},{99,97,98},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{128,129,133},{222,225,230},{220,225,231},{221,224,229},{221,224,229},{221,224,231},{218,221,226},{18,18,20},{0,0,0},{3,4,8},{79,101,148},{113,144,208},{114,146,207},{113,145,206},{114,145,209},{114,145,210},{112,146,209},{114,144,208},{78,101,145},{13,13,15},{124,120,121},{135,131,132},{136,130,132},{136,132,133},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{134,130,131},{134,130,131},{134,130,131},{134,130,131},{134,130,131},{134,130,131},{135,131,132},{134,130,131},{64,62,63},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{2,2,2},{125,126,130},{218,221,226},{220,225,229},{220,225,229},{220,225,229},{221,224,229},{221,224,229},{219,224,230},{124,125,129},{11,16,22},{78,99,142},{114,145,209},{113,144,208},{114,145,209},{113,144,208},{111,145,208},{114,145,209},{110,141,205},{64,84,119},{27,26,31},{112,108,109},{135,131,132},{133,131,132},{135,131,132},{134,130,131},{130,126,127},{124,120,121},{115,113,114},{98,96,97},{86,84,85},{69,67,68},{65,63,64},{61,59,60},{58,56,57},{56,54,55},{52,50,51},{51,49,50},{50,48,49},{45,45,45},{2,2,2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{2,2,2},{147,151,154},{220,223,228},{221,224,229},{221,224,229},{220,225,229},{221,224,229},{221,224,229},{220,223,230},{163,166,171},{12,13,18},{87,111,159},{114,145,209},{113,144,208},{113,144,208},{112,146,209},{113,144,208},{113,144,208},{114,145,209},{67,89,128},{13,14,16},{127,123,124},{134,130,131},{122,118,119},{106,102,103},{63,61,62},{18,18,18},{4,4,6},{3,3,1},{3,3,3},{1,1,1},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{9,9,9},{135,139,142},{222,225,230},{221,226,230},{221,224,229},{221,224,229},{221,224,229},{221,224,229},{221,224,229},{151,155,158},{36,40,49},{80,104,150},{114,145,209},{113,144,208},{113,144,208},{114,145,209},{114,145,209},{113,145,206},{105,135,195},{61,77,111},{3,3,5},{50,48,49},{42,42,42},{7,7,7},{0,0,0},{0,0,0},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{4,4,6},{159,163,166},{218,221,226},{220,225,229},{222,225,230},{221,224,229},{222,225,230},{221,226,230},{221,224,229},{149,153,156},{19,24,30},{90,116,167},{113,144,208},{114,145,209},{112,146,209},{112,143,207},{105,135,195},{77,99,140},{13,20,28},{6,9,14},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{15,15,15},{147,151,154},{222,225,230},{220,225,229},{220,225,229},{221,224,229},{221,224,229},{220,225,229},{219,224,228},{139,142,147},{32,36,47},{85,111,160},{111,142,206},{104,133,191},{75,96,139},{59,75,109},{23,31,44},{0,0,0},{0,0,0},{0,0,0},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{3,3,3},{6,6,6},{14,12,13},{28,28,28},{35,33,34},{51,49,50},{53,51,52},{52,50,51},{54,52,53},{57,55,56},{58,56,57},{59,57,58},{58,56,57},{55,53,54},{53,51,52},{53,51,52},{51,51,51},{38,36,37},{30,28,29},{18,18,18},{7,7,7},{3,3,3},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{4,4,6},{171,174,179},{218,223,227},{222,225,232},{220,225,229},{220,225,229},{220,225,229},{222,225,230},{220,223,228},{134,135,139},{25,31,43},{93,120,173},{90,118,168},{25,34,49},{11,14,21},{2,4,3},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{5,5,5},{14,14,14},{55,55,55},{105,103,104},{118,114,115},{120,116,117},{121,117,118},{122,118,119},{127,123,124},{129,125,126},{134,130,131},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{134,130,131},{130,126,127},{127,123,124},{123,119,120},{120,116,117},{116,114,115},{20,18,19},{0,0,0},{1,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,2},{0,1,0},{0,0,0},{0,0,0},{0,0,2},{20,20,22},{162,166,169},{220,225,229},{222,225,230},{221,224,229},{221,224,231},{221,224,229},{221,224,229},{221,224,229},{128,132,135},{8,8,8},{39,50,72},{9,12,17},{0,0,0},{0,0,0},{0,0,0},{4,5,9},{23,31,44},{33,44,64},{0,2,1},{41,41,41},{132,128,129},{136,132,133},{136,132,133},{133,131,132},{133,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{136,132,133},{136,132,133},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{109,107,108},{9,7,8},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{8,8,8},{178,182,185},{220,223,228},{221,224,229},{221,224,229},{220,225,229},{220,225,229},{220,223,228},{213,216,221},{94,94,96},{9,7,10},{0,0,0},{0,0,0},{1,1,1},{6,7,11},{44,58,84},{93,120,173},{95,122,175},{100,129,185},{44,56,80},{36,34,35},{125,123,124},{134,130,131},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{68,66,67},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{27,27,27},{178,182,185},{220,225,229},{220,225,231},{221,224,229},{220,223,228},{215,220,224},{169,172,177},{121,122,124},{12,12,12},{0,0,0},{9,14,18},{33,41,60},{47,63,89},{102,131,189},{114,145,209},{112,146,209},{113,144,208},{104,134,194},{48,62,89},{46,46,46},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{136,132,133},{135,131,132},{136,132,133},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{119,115,116},{20,20,20},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{12,12,14},{182,187,191},{220,223,228},{222,225,230},{220,225,229},{219,222,227},{156,157,162},{45,45,47},{13,13,13},{0,0,0},{27,34,50},{86,110,158},{95,122,177},{112,144,205},{111,145,208},{114,145,209},{113,145,206},{114,145,209},{106,136,196},{38,49,69},{49,47,48},{128,124,123},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{136,132,133},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{95,93,94},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{32,32,32},{195,200,204},{222,225,230},{221,224,229},{209,212,217},{163,167,170},{33,33,33},{10,10,10},{53,53,53},{6,6,6},{22,30,43},{100,129,185},{114,145,209},{114,145,209},{114,145,209},{113,144,208},{114,146,207},{114,145,209},{102,133,190},{41,53,77},{54,53,51},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{136,132,133},{135,131,132},{134,132,133},{136,132,133},{136,132,133},{136,130,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{136,132,133},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{51,51,51},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{20,20,20},{187,190,195},{221,226,230},{218,223,227},{119,123,126},{45,45,45},{9,9,9},{126,130,133},{172,175,180},{86,87,89},{42,53,73},{106,136,196},{114,145,209},{114,145,209},{114,145,209},{114,145,209},{114,145,209},{111,145,208},{103,132,190},{33,41,60},{59,57,58},{127,123,124},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{134,130,131},{116,112,113},{88,84,85},{87,83,84},{87,83,84},{87,83,84},{87,83,84},{87,83,84},{87,83,84},{86,82,83},{101,97,98},{130,126,127},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{135,131,132},{135,131,132},{135,131,132},{135,131,132},{136,132,133},{112,110,111},{15,15,15}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{41,41,41},{207,210,215},{209,212,217},{174,177,182},{39,39,39},{41,41,41},{122,123,127},{217,220,225},{214,217,224},{86,90,91},{28,35,51},{106,135,193},{113,144,208},{111,145,208},{114,145,209},{114,145,209},{113,144,208},{114,145,209},{102,131,189},{35,46,64},{56,54,55},{118,114,115},{108,104,105},{106,102,103},{104,103,101},{104,100,101},{60,58,59},{40,38,39},{3,3,3},{2,2,2},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{2,2,2},{1,1,1},{3,3,3},{18,16,17},{53,51,52},{78,76,77},{103,101,102},{105,103,104},{107,103,104},{111,107,108},{61,59,60}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{35,35,37},{188,191,196},{165,168,173},{55,56,58},{91,95,96},{161,162,167},{209,214,218},{219,224,227},{218,223,227},{78,79,83},{48,60,84},{107,137,199},{114,145,209},{113,144,208},{113,144,208},{113,144,208},{112,143,207},{86,112,161},{54,69,100},{19,25,37},{5,5,5},{27,25,26},{17,17,17},{2,2,2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{7,7,7},{20,20,20}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{47,48,52},{185,189,192},{96,97,99},{44,44,44},{186,189,194},{220,223,228},{220,225,229},{222,225,230},{208,213,217},{72,71,76},{33,41,62},{106,135,193},{99,128,184},{95,120,174},{91,117,168},{37,48,68},{3,7,10},{1,1,1},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{46,48,47},{83,84,86},{117,118,122},{168,172,175},{217,220,225},{220,225,229},{220,225,229},{221,224,229},{214,217,222},{70,71,73},{13,16,23},{41,53,77},{35,43,64},{11,15,24},{1,1,3},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{2,0,1},{0,0,0},{0,0,0},{22,22,22},{48,49,51},{184,187,192},{220,225,229},{220,225,231},{220,223,228},{202,207,211},{193,198,202},{126,127,131},{23,23,25},{2,0,1},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,0,0},{0,0,0},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{0,2,1},{0,0,0},{52,52,54},{152,156,159},{216,219,224},{220,225,229},{204,207,212},{121,122,126},{88,89,93},{33,33,35},{3,5,4},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,2},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{1,0,2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{25,25,27},{72,73,75},{214,218,221},{206,209,214},{160,161,166},{39,39,41},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,1,0},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{74,74,76},{103,104,106},{74,75,77},{17,17,19},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,2},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{3,3,5},{4,4,6},{3,3,5},{3,3,5},{2,2,4},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{1,1,3},{3,3,5},{3,3,5},{3,3,5},{2,2,4},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{89,115,166},{67,86,126},{56,71,102},{55,71,104},{64,84,121},{54,70,103},{2,2,4},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{76,97,142},{69,88,128},{56,71,104},{54,71,101},{59,77,113},{61,79,115},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,1,0},{0,0,0},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{94,119,173},{30,37,53},{0,0,0},{0,0,0},{0,0,2},{87,113,162},{8,9,13},{62,80,116},{80,107,152},{79,102,146},{78,101,143},{67,87,124},{9,12,17},{0,0,0},{30,41,59},{104,133,191},{24,30,44},{0,0,0},{1,1,3},{103,133,193},{12,16,25},{0,0,0},{44,58,85},{64,84,121},{1,2,4},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,1,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{81,103,150},{34,42,61},{0,0,0},{1,1,1},{3,3,5},{83,107,155},{8,11,18},{51,70,100},{84,106,155},{78,101,145},{78,101,143},{68,87,127},{9,14,20},{0,1,0},{19,25,37},{103,132,190},{30,39,56},{0,0,0},{0,0,0},{89,117,167},{24,30,44},{0,0,0},{37,48,70},{74,97,141},{5,6,10},{0,0,0}},
{{1,1,1},{0,0,0},{94,124,178},{57,76,109},{40,52,76},{41,53,75},{51,65,94},{75,96,139},{3,4,6},{64,80,114},{24,30,44},{10,13,18},{10,13,20},{8,9,14},{0,0,0},{5,6,10},{67,85,123},{21,28,38},{61,79,115},{0,0,0},{2,2,4},{107,138,195},{29,36,54},{62,80,116},{43,55,79},{3,3,5},{0,0,0},{0,0,0},{5,5,7},{27,36,51},{51,68,96},{37,52,73},{20,28,41},{21,29,40},{33,41,62},{39,50,72},{38,50,72},{16,19,26},{0,0,0},{0,0,0},{0,0,0},{82,104,151},{60,79,112},{40,52,76},{40,52,76},{47,62,91},{77,101,147},{3,3,5},{56,72,105},{27,34,50},{10,13,18},{10,13,18},{8,9,14},{0,0,0},{3,4,6},{67,85,123},{28,35,53},{63,83,118},{0,0,0},{0,0,0},{94,120,171},{38,49,69},{62,78,112},{45,59,85},{3,4,6},{0,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{95,122,175},{49,64,93},{28,37,52},{25,34,49},{17,24,34},{2,3,5},{0,1,0},{64,82,120},{66,86,123},{59,78,111},{59,78,111},{44,58,84},{0,0,0},{22,30,43},{50,64,91},{2,2,2},{65,85,122},{20,28,39},{1,2,4},{107,137,197},{80,102,149},{96,125,181},{25,33,46},{0,0,0},{0,0,0},{0,0,0},{1,0,0},{0,2,1},{55,71,104},{23,29,45},{2,3,5},{56,71,102},{4,3,8},{0,2,1},{3,4,6},{66,88,127},{1,0,0},{0,0,0},{0,0,0},{81,105,153},{53,68,99},{28,37,52},{27,36,53},{20,26,38},{3,4,6},{0,0,0},{57,74,104},{67,89,126},{59,78,111},{61,77,111},{44,58,84},{2,3,5},{19,26,36},{56,72,105},{0,0,0},{58,77,110},{37,48,70},{0,0,0},{92,120,170},{83,107,155},{94,119,173},{37,45,66},{0,0,0},{0,0,0},{0,0,0}},
{{1,1,1},{1,0,0},{92,119,172},{29,38,53},{0,0,0},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{64,80,116},{17,21,32},{3,4,6},{2,3,5},{1,2,4},{3,4,6},{77,100,144},{48,62,91},{42,54,78},{48,63,92},{94,119,175},{10,11,16},{107,137,197},{16,20,29},{10,13,18},{70,89,129},{27,36,53},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{55,71,104},{23,31,44},{1,1,1},{55,72,102},{6,10,13},{0,0,0},{16,20,31},{61,80,113},{0,0,0},{0,0,0},{0,0,0},{80,104,150},{33,41,60},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{57,73,106},{20,26,40},{2,3,5},{2,3,5},{2,2,4},{0,0,0},{66,84,124},{51,68,98},{41,53,77},{43,57,83},{93,120,175},{11,16,22},{94,120,171},{27,34,50},{6,7,11},{66,85,125},{33,44,62},{1,0,0},{0,0,0}},
{{1,1,1},{0,0,0},{68,86,124},{19,25,37},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{47,61,88},{72,91,133},{70,89,131},{71,90,130},{62,80,116},{37,49,73},{52,67,98},{0,1,0},{0,0,0},{0,0,0},{51,66,95},{32,40,59},{77,98,143},{8,11,18},{0,0,0},{12,15,24},{63,83,120},{13,18,24},{0,0,0},{0,0,0},{0,0,0},{37,52,73},{17,21,32},{0,0,0},{11,14,19},{52,67,98},{58,74,107},{44,58,85},{4,7,12},{0,0,0},{0,0,0},{0,0,0},{58,74,107},{23,31,44},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{39,51,75},{70,92,133},{70,89,129},{71,90,130},{65,85,122},{31,42,60},{58,77,110},{1,1,3},{0,0,0},{0,0,0},{39,50,72},{33,44,64},{67,86,126},{15,21,33},{0,0,0},{8,11,16},{64,84,121},{21,27,41},{0,0,0}},
{{2,0,3},{1,0,0},{0,0,0},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,2},{0,0,0},{0,0,0},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,2},{0,0,2},{0,0,0}},
{{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,3},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{1,0,0},{0,0,0},{0,0,0},{0,0,0},{1,1,1},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,2},{0,1,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,2}},
{{3,1,2},{44,44,46},{81,80,85},{78,79,81},{22,22,22},{0,0,0},{56,56,58},{30,30,30},{0,0,0},{63,64,66},{1,0,0},{0,0,0},{60,61,63},{74,74,76},{2,2,2},{0,0,0},{53,55,54},{90,91,93},{79,80,82},{75,76,78},{0,0,0},{38,38,40},{96,97,101},{92,93,97},{51,51,53},{0,0,0},{40,40,42},{90,91,93},{77,78,80},{22,22,24},{0,0,0},{75,76,78},{78,79,81},{87,91,94},{31,31,31},{0,0,0},{0,0,0},{11,11,11},{80,84,87},{84,85,87},{42,43,45},{0,0,0},{6,6,6},{71,72,74},{80,81,83},{69,68,73},{5,5,3},{0,0,0},{47,48,50},{1,1,1},{36,37,39},{17,17,17},{0,0,0},{44,45,47},{80,80,82},{77,78,82},{42,43,45},{0,1,0},{3,3,3},{69,69,71},{80,82,81},{65,66,68},{4,4,6},{0,0,0},{89,93,96},{0,1,3},{0,0,0}},
{{17,17,17},{99,100,104},{3,3,5},{7,9,8},{12,12,12},{1,0,0},{81,82,84},{116,117,119},{90,90,92},{107,108,112},{0,0,0},{14,14,16},{93,94,98},{67,68,70},{31,32,34},{0,0,2},{79,78,83},{119,120,124},{110,111,115},{97,98,100},{0,0,0},{0,0,0},{50,52,51},{35,36,38},{0,0,0},{0,0,0},{55,55,57},{112,113,115},{87,87,89},{17,17,17},{0,0,0},{108,109,111},{100,101,103},{121,122,126},{35,35,35},{0,0,0},{0,0,0},{11,11,11},{94,95,99},{103,104,106},{59,59,61},{0,0,0},{58,60,59},{77,81,84},{0,0,0},{20,20,22},{2,2,2},{0,0,0},{106,107,111},{90,90,92},{112,113,115},{26,26,26},{11,11,11},{109,109,111},{3,3,3},{6,6,8},{141,142,144},{3,3,3},{38,38,38},{66,67,69},{0,1,0},{73,74,76},{23,24,26},{0,0,0},{134,138,139},{0,0,2},{0,0,0}},
{{4,4,2},{92,93,95},{32,34,33},{47,48,50},{48,49,51},{0,0,0},{75,76,78},{42,42,42},{0,0,2},{85,86,88},{0,0,0},{49,49,51},{80,81,83},{78,80,79},{71,71,73},{0,0,0},{74,74,76},{32,32,32},{34,36,35},{96,96,98},{0,0,0},{0,0,0},{45,45,45},{31,32,34},{0,0,0},{0,0,0},{43,43,45},{53,54,56},{30,30,30},{10,10,10},{0,0,0},{86,87,89},{0,0,0},{69,70,72},{26,26,26},{0,0,0},{0,0,0},{19,19,19},{50,51,53},{35,35,35},{98,99,101},{0,0,0},{28,28,28},{102,103,107},{30,32,31},{76,76,78},{13,13,15},{0,0,0},{66,67,69},{2,2,2},{50,52,51},{24,24,24},{2,2,2},{98,98,100},{33,33,33},{38,38,40},{110,111,113},{0,0,0},{14,14,14},{79,80,82},{29,31,30},{79,80,82},{10,11,13},{0,0,0},{130,131,133},{31,31,33},{19,19,19}},
{{1,1,1},{9,9,9},{27,27,27},{26,28,27},{3,3,3},{0,0,0},{14,14,16},{7,7,5},{0,0,0},{16,16,16},{0,0,0},{11,11,11},{4,4,4},{1,1,1},{18,18,20},{0,0,0},{13,13,13},{6,6,6},{0,0,0},{31,31,31},{0,0,0},{0,0,0},{8,8,8},{5,5,7},{0,0,0},{0,0,0},{10,10,10},{27,27,27},{26,26,26},{8,8,8},{0,0,0},{15,17,16},{0,0,0},{7,8,10},{16,16,16},{0,0,0},{0,0,0},{3,3,3},{24,25,27},{27,27,27},{14,15,17},{0,0,0},{0,0,0},{19,20,22},{26,26,28},{23,23,25},{0,0,0},{0,0,0},{12,12,12},{0,0,0},{9,9,9},{4,4,4},{0,0,0},{6,8,7},{28,28,28},{26,27,29},{5,5,5},{0,0,0},{0,0,0},{19,19,19},{26,26,26},{18,18,18},{1,1,1},{0,0,0},{26,27,29},{26,26,26},{16,16,16}}
};
byte c[10000];
boolean tmp=false;

void setup() {
  Serial.begin(250000);
  digitalWrite(13, LOW);
  delay(2500);
  // This is for Trinket 5V 16MHz, you can remove these three lines if you are not using a Trinket
  #if defined (__AVR_ATtiny85__)
    if (F_CPU == 16000000) clock_prescale_set(clock_div_1);
  #endif
  // End of trinket special code

  strip.begin();
  strip.setBrightness(32);
//  strip.show();
//  for (int rr = 0; rr <= ymax; rr++) {
//    for (int cc=0; cc <= xmax; cc++) {
//      strip.setPixelColor(toLEDNum(rr, cc), strip.Color(0, 0, 0));      
//    }
//  }
//  strip.show(); // Initialize all pixels to 'off'

  for (int r=0; r<ymax+1; r++) {
    for (int c=0; c<xmax+1; c++) {
      strip.setPixelColor(toLEDNum(r, c), strip.Color(logo[r][c][0], logo[r][c][1], logo[r][c][2]));
    }
  }
  strip.show();
}


boolean setupB=true;
void loop() {
  while (Serial.available() > 0) {
    int n=Serial.readBytes(c, 1);
    if(c[0]=='P') {
      int n=Serial.readBytes(c, 5);
      int row=c[0];
      int col=c[1];
      int r=c[2];
      int g=c[3];
      int b=c[4];
      strip.setPixelColor(toLEDNum(row, col), strip.Color(r, g, b));
    }
    else if(c[0]=='X') {
      int n=Serial.readBytes(c, 4);
      int row=c[0];
      int col=c[1];
      int w=c[2];
      int h=c[3];
//      n=Serial.readBytes(c, 3*w*h);
//      int i=0;
      for (int rr=0; rr<h; rr++) {
        for (int cc=0; cc<w; cc++) {
          int red = Serial.parseInt();
          int green = Serial.parseInt();
          int blue = Serial.parseInt();
//            unsigned int red = c[i++];
//            unsigned int green = c[i++];
//            unsigned int blue = c[i++];
            strip.setPixelColor(toLEDNum(row+rr, col+cc), strip.Color(red, green, blue));
        }
      }
    }
    else if(c[0]=='E') {
      strip.show();
      //Serial.write("E1");
    }
    else if(c[0]=='D') {
      for(int rr=0; rr<=ymax; rr++) {
        for(int cc=0; cc<=xmax; cc++) {
          strip.setPixelColor(toLEDNum(rr, cc), strip.Color(0, 0, 0));      
        }
      }
      //Serial.write("D1");
    }
    else if(c[0]=='R') {
      int n=Serial.readBytes(c, 8);
      int row=c[0];
      int col=c[1];
      int w=c[2];
      int h=c[3];
      int r=c[4];
      int g=c[5];
      int b=c[6];
      int f=c[7];
       if(f==0) {
        colorRect(row, col, w, h, r, g, b, false);
      }
      else {
        colorRect(row, col, w, h, r, g, b, true);
      }
    }
    else if(c[0]=='C') {
      int n=Serial.readBytes(c, 7);
      int row=c[0];
      int col=c[1];
      int radius=c[2];
      int r=c[3];
      int g=c[4];
      int b=c[5];
      int f=c[6];

      if(f==0) {
        drawCircle(row, col, radius, r, g, b, false);
      }
      else {
        drawCircle(row, col, radius, r, g, b, true);
      }
    }
    
    else if(c[0]=='I') {
      int n = Serial.readBytes(c,1);
      int bright = c[0];
      strip.setBrightness(bright);
    }
    
    else if(c[0]=='L') {
      int n=Serial.readBytes(c, 7);
      int row1=c[0];
      int col1=c[1];
      int row2=c[2];
      int col2=c[3];
      int r=c[4];
      int g=c[5];
      int b=c[6];
      drawLine(row1, col1, row2, col2, r, g, b);
    }
    else if(c[0]=='S') {
      int n=Serial.readBytes(c, 6);
      int row=c[0];
      int col=c[1];
      int r=c[2];
      int g=c[3];
      int b=c[4];
      int count=c[5];
      char text[count];
      Serial.readBytes(text, count);
      drawString(count, row, col, r, g, b, text);
    }
  }
}
  


const static int ROWS = 44;
const static int COLS = 74;
static int colmax = 73;


 int toLEDNum(int row, int col) { //The original LED num method. This is still vital.
  int output = 0;
  if (row % 2 == 0) {
    output = (row * colmax) + (row + col);
  }
  else {
    output = (row * colmax) + ((colmax - col) + row);
  }
  return output;
}




///////////////////////////////////////////////////PIXEL
void setPixel(int row, int col, int r, int g, int b)
{
  colorPixel(row, col, r, g, b);
}

void colorPixel(int row, int col, int r, int g, int b)
{
  if (row < 0 || row >= ROWS || col < 0 || col >= COLS)
  {
    return;
  }
  int led = toLEDNum(row, col);
  strip.setPixelColor(led, r, g, b);
}



void clear()
{
  colorRect(0, 0, COLS, ROWS, 0, 0, 0, true);
}

//////////////////////////////////////////////////////////////////////////////Line
void drawLine(int r1, int c1, int r2, int c2, int red, int green, int blue) {
  // Draw line using RGB
  int deltC = c2 - c1;
  int deltR = r2 - r1;
  double slope = (double) deltR / deltC;

  double c = min(c1, c2);
  double r = min(r1, r2);

  if (slope > -1 && slope < 1) {
    if (min(c1, c2) == c2) {
      r = r2;
    }
    else {
      r = r1;
    }
    if (min(r1, r2) == r2) {
      c = c2;
    }
    else {
      c = c1;
    }
    for (int c3 = min(c1, c2); c3 <= max(c1, c2); c3++) {
      r = r + slope;
      setPixel((int)r, c3, red, green, blue);
    }

  }
  else {
    if (min(c1, c2) == c2) {
      r = r2;
    }
    else {
      r = r1;
    }
    if (min(r1, r2) == r2) {
      c = c2;
    }
    else {
      c = c1;
    }
    for (int r3 = min(r1, r2); r3 <= max(r1, r2); r3++) {
      c = c + 1 / slope;
      setPixel(r3, (int)c, red, green, blue);
    }
  }
}

///////////////////////////////////////////////////////////////Rect
void colorRect(int row, int col, int width, int height, int r, int g, int b, boolean solid)
{
  if (solid == false)
  {
    drawLine(row, col, row + height, col, r, g, b);
    drawLine(row, col, row, col + width, r, g, b);
    drawLine(row + height, col, row + height, col + width, r, g, b);
    drawLine(row, col + width, row + height, col + width, r, g, b);
  }
  else
  {
    int finalRow = row + height;

    if (finalRow >= ROWS)
    {
      finalRow = ROWS - 1;
    }
    int finalCol = col + width;
    if (finalCol >= COLS)
    {
      finalCol = COLS - 1;
    }
    for (int rw = row; rw <= finalRow; rw++)
    {
      for (int cl = col; cl <= finalCol; cl++)
      {
        colorPixel(rw, cl, r, g, b);
      }
    }
  }
}

////////////////////////////////////////////////CIRCLE
void drawCircle(int x, int y, int r, int red, int green, int blue, boolean fill)
{
  double i, angle, x1, y1;
  if (fill == false)
  {
    for (i = 0; i < 360; i += 1)
    {
      angle = i;
      x1 = r * cos(angle * PI / 180);
      y1 = r * sin(angle * PI / 180);

      int ElX = (int) (x + x1 + 0.5);
      int ElY = (int) (y + y1 + 0.5);

      setPixel(ElX, ElY, red, green, blue);
    }
  }
  else
  {
    for (int j = r; j >= 0; j--)
    {
      for (i = 0; i < 360; i += 1)
      {
        angle = i;
        x1 = j * cos(angle * PI / 180);
        y1 = j * sin(angle * PI / 180);

        int ElX = (int) (x + x1 + 0.5);
        int ElY = (int) (y + y1 + 0.5);

        setPixel(ElX, ElY, red, green, blue);
      }
    }
  }
}

//////////////////////////////////////////////////////////////////////////////////TEXT
void drawString(int n, int row, int col, int red, int green, int blue, String chars) {
  char charset[256][6]  = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //   0x 0 0
    {0x00, 0x64, 0x18, 0x04, 0x64, 0x18}, // 0x 1 1
    {0x00, 0x3c, 0x40, 0x40, 0x20, 0x7c}, // 0x 2 2
    {0x00, 0x0c, 0x30, 0x40, 0x30, 0x0c}, // 0x 3 3
    {0x00, 0x3c, 0x40, 0x30, 0x40, 0x3c}, // 0x 4 4
    {0x00, 0x00, 0x3e, 0x1c, 0x08, 0x00}, // 0x 5 5
    {0x00, 0x04, 0x1e, 0x1f, 0x1e, 0x04}, // 0x 6 6
    {0x00, 0x10, 0x3c, 0x7c, 0x3c, 0x10}, // 0x 7 7
    {0x00, 0x20, 0x40, 0x3e, 0x01, 0x02}, // 0x 8 8
    {0x00, 0x22, 0x14, 0x08, 0x14, 0x22}, //   0x 9 9
    {0x00, 0x00, 0x38, 0x28, 0x38, 0x00}, //   0x a 10
    {0x00, 0x00, 0x10, 0x38, 0x10, 0x00}, // 0x b 11
    {0x00, 0x00, 0x00, 0x10, 0x00, 0x00}, //  0x c 12
    {0x00, 0x08, 0x78, 0x08, 0x00, 0x00}, //   0x d 13
    {0x00, 0x00, 0x15, 0x15, 0x0a, 0x00}, // 0x e 14
    {0x00, 0x7f, 0x7f, 0x09, 0x09, 0x01}, // 0x f 15
    {0x00, 0x10, 0x20, 0x7f, 0x01, 0x01}, // 0x10 16
    {0x00, 0x04, 0x04, 0x00, 0x01, 0x1f}, // 0x11 17
    {0x00, 0x00, 0x19, 0x15, 0x12, 0x00}, // 0x12 18
    {0x00, 0x40, 0x60, 0x50, 0x48, 0x44}, // 0x13 19
    {0x00, 0x06, 0x09, 0x09, 0x06, 0x00}, // 0x14 20
    {0x00, 0x0f, 0x02, 0x01, 0x01, 0x00}, // 0x15 21
    {0x00, 0x00, 0x01, 0x1f, 0x01, 0x00}, // 0x16 22
    {0x00, 0x44, 0x44, 0x4a, 0x4a, 0x51}, // 0x17 23
    {0x00, 0x14, 0x74, 0x1c, 0x17, 0x14}, // 0x18 24
    {0x00, 0x51, 0x4a, 0x4a, 0x44, 0x44}, // 0x19 25
    {0x00, 0x00, 0x00, 0x04, 0x04, 0x04}, //   0x1a 26
    {0x00, 0x00, 0x7c, 0x54, 0x54, 0x44}, // 0x1b 27
    {0x00, 0x08, 0x08, 0x2a, 0x1c, 0x08}, //  0x1c 28
    {0x00, 0x7c, 0x00, 0x7c, 0x44, 0x7c}, //   0x1d 29
    {0x00, 0x04, 0x02, 0x7f, 0x02, 0x04}, //   0x1e 30
    {0x00, 0x10, 0x20, 0x7f, 0x20, 0x10}, //   0x1f 31
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //   0x20 32
    {0x00, 0x00, 0x00, 0x6f, 0x00, 0x00}, // ! 0x21 33
    {0x00, 0x00, 0x07, 0x00, 0x07, 0x00}, // " 0x22 34
    {0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14}, // # 0x23 35
    {0x00, 0x00, 0x07, 0x04, 0x1e, 0x00}, // $ 0x24 36
    {0x00, 0x23, 0x13, 0x08, 0x64, 0x62}, // % 0x25 37
    {0x00, 0x36, 0x49, 0x56, 0x20, 0x50}, // & 0x26 38
    {0x00, 0x00, 0x00, 0x07, 0x00, 0x00}, // ' 0x27 39
    {0x00, 0x00, 0x1c, 0x22, 0x41, 0x00}, // ( 0x28 40
    {0x00, 0x00, 0x41, 0x22, 0x1c, 0x00}, // ) 0x29 41
    {0x00, 0x14, 0x08, 0x3e, 0x08, 0x14}, // * 0x2a 42
    {0x00, 0x08, 0x08, 0x3e, 0x08, 0x08}, // + 0x2b 43
    {0x00, 0x00, 0x50, 0x30, 0x00, 0x00}, // , 0x2c 44
    {0x00, 0x08, 0x08, 0x08, 0x08, 0x08}, // - 0x2d 45
    {0x00, 0x00, 0x60, 0x60, 0x00, 0x00}, // . 0x2e 46
    {0x00, 0x20, 0x10, 0x08, 0x04, 0x02}, // / 0x2f 47
    {0x00, 0x3e, 0x51, 0x49, 0x45, 0x3e}, // 0 0x30 48
    {0x00, 0x00, 0x42, 0x7f, 0x40, 0x00}, // 1 0x31 49
    {0x00, 0x42, 0x61, 0x51, 0x49, 0x46}, // 2 0x32 50
    {0x00, 0x21, 0x41, 0x45, 0x4b, 0x31}, // 3 0x33 51
    {0x00, 0x18, 0x14, 0x12, 0x7f, 0x10}, // 4 0x34 52
    {0x00, 0x27, 0x45, 0x45, 0x45, 0x39}, // 5 0x35 53
    {0x00, 0x3c, 0x4a, 0x49, 0x49, 0x30}, // 6 0x36 54
    {0x00, 0x01, 0x71, 0x09, 0x05, 0x03}, // 7 0x37 55
    {0x00, 0x36, 0x49, 0x49, 0x49, 0x36}, // 8 0x38 56
    {0x00, 0x06, 0x49, 0x49, 0x29, 0x1e}, // 9 0x39 57
    {0x00, 0x00, 0x36, 0x36, 0x00, 0x00}, // : 0x3a 58
    {0x00, 0x00, 0x56, 0x36, 0x00, 0x00}, // ; 0x3b 59
    {0x00, 0x08, 0x14, 0x22, 0x41, 0x00}, // < 0x3c 60
    {0x00, 0x14, 0x14, 0x14, 0x14, 0x14}, // = 0x3d 61
    {0x00, 0x00, 0x41, 0x22, 0x14, 0x08}, // > 0x3e 62
    {0x00, 0x02, 0x01, 0x51, 0x09, 0x06}, // ? 0x3f 63
    {0x00, 0x3e, 0x41, 0x5d, 0x49, 0x4e}, // @ 0x40 64
    {0x00, 0x7e, 0x09, 0x09, 0x09, 0x7e}, // A 0x41 65
    {0x00, 0x7f, 0x49, 0x49, 0x49, 0x36}, // B 0x42 66
    {0x00, 0x3e, 0x41, 0x41, 0x41, 0x22}, // C 0x43 67
    {0x00, 0x7f, 0x41, 0x41, 0x41, 0x3e}, // D 0x44 68
    {0x00, 0x7f, 0x49, 0x49, 0x49, 0x41}, // E 0x45 69
    {0x00, 0x7f, 0x09, 0x09, 0x09, 0x01}, // F 0x46 70
    {0x00, 0x3e, 0x41, 0x49, 0x49, 0x7a}, // G 0x47 71
    {0x00, 0x7f, 0x08, 0x08, 0x08, 0x7f}, // H 0x48 72
    {0x00, 0x00, 0x41, 0x7f, 0x41, 0x00}, // I 0x49 73
    {0x00, 0x20, 0x40, 0x41, 0x3f, 0x01}, // J 0x4a 74
    {0x00, 0x7f, 0x08, 0x14, 0x22, 0x41}, // K 0x4b 75
    {0x00, 0x7f, 0x40, 0x40, 0x40, 0x40}, // L 0x4c 76
    {0x00, 0x7f, 0x02, 0x0c, 0x02, 0x7f}, // M 0x4d 77
    {0x00, 0x7f, 0x04, 0x08, 0x10, 0x7f}, // N 0x4e 78
    {0x00, 0x3e, 0x41, 0x41, 0x41, 0x3e}, // O 0x4f 79
    {0x00, 0x7f, 0x09, 0x09, 0x09, 0x06}, // P 0x50 80
    {0x00, 0x3e, 0x41, 0x51, 0x21, 0x5e}, // Q 0x51 81
    {0x00, 0x7f, 0x09, 0x19, 0x29, 0x46}, // R 0x52 82
    {0x00, 0x46, 0x49, 0x49, 0x49, 0x31}, // S 0x53 83
    {0x00, 0x01, 0x01, 0x7f, 0x01, 0x01}, // T 0x54 84
    {0x00, 0x3f, 0x40, 0x40, 0x40, 0x3f}, // U 0x55 85
    {0x00, 0x0f, 0x30, 0x40, 0x30, 0x0f}, // V 0x56 86
    {0x00, 0x3f, 0x40, 0x30, 0x40, 0x3f}, // W 0x57 87
    {0x00, 0x63, 0x14, 0x08, 0x14, 0x63}, // X 0x58 88
    {0x00, 0x07, 0x08, 0x70, 0x08, 0x07}, // Y 0x59 89
    {0x00, 0x61, 0x51, 0x49, 0x45, 0x43}, // Z 0x5a 90
    {0x00, 0x3c, 0x4a, 0x49, 0x29, 0x1e}, // [ 0x5b 91
    {0x00, 0x02, 0x04, 0x08, 0x10, 0x20}, // \ 0x5c 92
    {0x00, 0x00, 0x41, 0x7f, 0x00, 0x00}, // ] 0x5d 93
    {0x00, 0x04, 0x02, 0x01, 0x02, 0x04}, // ^ 0x5e 94
    {0x00, 0x40, 0x40, 0x40, 0x40, 0x40}, // _ 0x5f 95
    {0x00, 0x00, 0x00, 0x03, 0x04, 0x00}, // ` 0x60 96
    {0x00, 0x20, 0x54, 0x54, 0x54, 0x78}, // a 0x61 97
    {0x00, 0x7f, 0x48, 0x44, 0x44, 0x38}, // b 0x62 98
    {0x00, 0x38, 0x44, 0x44, 0x44, 0x20}, // c 0x63 99
    {0x00, 0x38, 0x44, 0x44, 0x48, 0x7f}, // d 0x64 100
    {0x00, 0x38, 0x54, 0x54, 0x54, 0x18}, // e 0x65 101
    {0x00, 0x08, 0x7e, 0x09, 0x01, 0x02}, // f 0x66 102
    {0x00, 0x0c, 0x52, 0x52, 0x52, 0x3e}, // g 0x67 103
    {0x00, 0x7f, 0x08, 0x04, 0x04, 0x78}, // h 0x68 104
    {0x00, 0x00, 0x44, 0x7d, 0x40, 0x00}, // i 0x69 105
    {0x00, 0x20, 0x40, 0x44, 0x3d, 0x00}, // j 0x6a 106
    {0x00, 0x00, 0x7f, 0x10, 0x28, 0x44}, // k 0x6b 107
    {0x00, 0x00, 0x41, 0x7f, 0x40, 0x00}, // l 0x6c 108
    {0x00, 0x7c, 0x04, 0x18, 0x04, 0x78}, // m 0x6d 109
    {0x00, 0x7c, 0x08, 0x04, 0x04, 0x78}, // n 0x6e 110
    {0x00, 0x38, 0x44, 0x44, 0x44, 0x38}, // o 0x6f 111
    {0x00, 0x7c, 0x14, 0x14, 0x14, 0x08}, // p 0x70 112
    {0x00, 0x08, 0x14, 0x14, 0x18, 0x7c}, // q 0x71 113
    {0x00, 0x7c, 0x08, 0x04, 0x04, 0x08}, // r 0x72 114
    {0x00, 0x48, 0x54, 0x54, 0x54, 0x20}, // s 0x73 115
    {0x00, 0x04, 0x3f, 0x44, 0x40, 0x20}, // t 0x74 116
    {0x00, 0x3c, 0x40, 0x40, 0x20, 0x7c}, // u 0x75 117
    {0x00, 0x1c, 0x20, 0x40, 0x20, 0x1c}, // v 0x76 118
    {0x00, 0x3c, 0x40, 0x30, 0x40, 0x3c}, // w 0x77 119
    {0x00, 0x44, 0x28, 0x10, 0x28, 0x44}, // x 0x78 120
    {0x00, 0x0c, 0x50, 0x50, 0x50, 0x3c}, // y 0x79 121
    {0x00, 0x44, 0x64, 0x54, 0x4c, 0x44}, // z 0x7a 122
    {0x00, 0x00, 0x08, 0x36, 0x41, 0x41}, // { 0x7b 123
    {0x00, 0x00, 0x00, 0x7f, 0x00, 0x00}, // | 0x7c 124
    {0x00, 0x41, 0x41, 0x36, 0x08, 0x00}, // } 0x7d 125
    {0x00, 0x04, 0x02, 0x04, 0x08, 0x04}, // ~ 0x7e 126
    {0x00, 0x7f, 0x6b, 0x6b, 0x6b, 0x7f}, //0x7f 127
    {0x00, 0x00, 0x7c, 0x44, 0x7c, 0x00}, //  0x80 128
    {0x00, 0x00, 0x08, 0x7c, 0x00, 0x00}, // 0x81 129
    {0x00, 0x00, 0x64, 0x54, 0x48, 0x00}, //  0x82 130
    {0x00, 0x00, 0x44, 0x54, 0x28, 0x00}, //  0x83 131
    {0x00, 0x00, 0x1c, 0x10, 0x78, 0x00}, //  0x84 132
    {0x00, 0x00, 0x5c, 0x54, 0x24, 0x00}, //  0x85 133
    {0x00, 0x00, 0x78, 0x54, 0x74, 0x00}, //  0x86 134
    {0x00, 0x00, 0x64, 0x14, 0x0c, 0x00}, //  0x87 135
    {0x00, 0x00, 0x7c, 0x54, 0x7c, 0x00}, //  0x88 136
    {0x00, 0x00, 0x5c, 0x54, 0x3c, 0x00}, //  0x89 137
    {0x00, 0x78, 0x24, 0x26, 0x25, 0x78}, //  0x8a 138
    {0x00, 0x78, 0x25, 0x26, 0x24, 0x78}, //  0x8b 139
    {0x00, 0x70, 0x2a, 0x29, 0x2a, 0x70}, //  0x8c 140
    {0x00, 0x78, 0x25, 0x24, 0x25, 0x78}, // 0x8d 141
    {0x00, 0x20, 0x54, 0x56, 0x55, 0x78}, //  0x8e 142
    {0x00, 0x20, 0x55, 0x56, 0x54, 0x78}, //  0x8f 143
    {0x00, 0x20, 0x56, 0x55, 0x56, 0x78}, // 0x90 144
    {0x00, 0x20, 0x55, 0x54, 0x55, 0x78}, //  0x91 145
    {0x00, 0x7c, 0x54, 0x56, 0x55, 0x44}, //  0x92 146
    {0x00, 0x7c, 0x55, 0x56, 0x54, 0x44}, // 0x93 147
    {0x00, 0x7c, 0x56, 0x55, 0x56, 0x44}, //  0x94 148
    {0x00, 0x7c, 0x55, 0x54, 0x55, 0x44}, //  0x95 149
    {0x00, 0x38, 0x54, 0x56, 0x55, 0x18}, //  0x96 150
    {0x00, 0x38, 0x55, 0x56, 0x54, 0x18}, //  0x97 151
    {0x00, 0x38, 0x56, 0x55, 0x56, 0x18}, //  0x98 152
    {0x00, 0x38, 0x55, 0x54, 0x55, 0x18}, //  0x99 153
    {0x00, 0x00, 0x44, 0x7e, 0x45, 0x00}, //  0x9a 154
    {0x00, 0x00, 0x45, 0x7e, 0x44, 0x00}, //  0x9b 155
    {0x00, 0x00, 0x46, 0x7d, 0x46, 0x00}, //  0x9c 156
    {0x00, 0x00, 0x45, 0x7c, 0x45, 0x00}, //  0x9d 157
    {0x00, 0x00, 0x48, 0x7a, 0x41, 0x00}, //  0x9e 158
    {0x00, 0x00, 0x49, 0x7a, 0x40, 0x00}, //  0x9f 159
    {0x00, 0x00, 0x4a, 0x79, 0x42, 0x00}, //  0xa0 160
    {0x00, 0x00, 0x49, 0x78, 0x41, 0x00}, //  0xa1 161
    {0x00, 0x38, 0x44, 0x46, 0x45, 0x38}, //  0xa2 162
    {0x00, 0x38, 0x45, 0x46, 0x44, 0x38}, //  0xa3 163
    {0x00, 0x38, 0x46, 0x45, 0x46, 0x38}, //  0xa4 164
    {0x00, 0x38, 0x45, 0x44, 0x45, 0x38}, //  0xa5 165
    {0x00, 0x30, 0x48, 0x4a, 0x49, 0x30}, //  0xa6 166
    {0x00, 0x30, 0x49, 0x4a, 0x48, 0x30}, //  0xa7 167
    {0x00, 0x30, 0x4a, 0x49, 0x4a, 0x30}, //  0xa8 168
    {0x00, 0x30, 0x49, 0x48, 0x49, 0x30}, //  0xa9 169
    {0x00, 0x3c, 0x40, 0x42, 0x41, 0x3c}, //  0xaa 170
    {0x00, 0x3c, 0x41, 0x42, 0x40, 0x3c}, //  0xab 171
    {0x00, 0x3c, 0x42, 0x41, 0x42, 0x3c}, //  0xac 172
    {0x00, 0x3c, 0x41, 0x40, 0x41, 0x3c}, //  0xad 173
    {0x00, 0x3c, 0x40, 0x42, 0x21, 0x7c}, //  0xae 174
    {0x00, 0x3c, 0x41, 0x42, 0x20, 0x7c}, //  0xaf 175
    {0x00, 0x38, 0x42, 0x41, 0x22, 0x78}, // 0xb0 176
    {0x00, 0x3c, 0x41, 0x40, 0x21, 0x7c}, //  0xb1 177
    {0x00, 0x4e, 0x51, 0x71, 0x11, 0x0a}, //  0xb2 178
    {0x00, 0x58, 0x64, 0x64, 0x24, 0x10}, //  0xb3 179
    {0x00, 0x7c, 0x0a, 0x11, 0x22, 0x7d}, //  0xb4 180
    {0x00, 0x78, 0x12, 0x09, 0x0a, 0x71}, //  0xb5 181
    {0x00, 0x00, 0x00, 0x04, 0x02, 0x01}, //  0xb6 182
    {0x00, 0x01, 0x02, 0x04, 0x00, 0x00}, //  0xb7 183
    {0x00, 0x00, 0x02, 0x00, 0x02, 0x00}, //  0xb8 184
    {0x00, 0x30, 0x48, 0x45, 0x40, 0x20}, //  0xb9 185
    {0x00, 0x00, 0x00, 0x7b, 0x00, 0x00}, //  0xba 186
    {0x00, 0x38, 0x44, 0x44, 0x38, 0x44}, //  0xbb 187
    {0x00, 0x40, 0x3e, 0x49, 0x49, 0x36}, //  0xbc 188
    {0x00, 0x08, 0x04, 0x08, 0x70, 0x0c}, //  0xbd 189
    {0x00, 0x60, 0x50, 0x48, 0x50, 0x60}, //  0xbe 190
    {0x00, 0x20, 0x52, 0x55, 0x59, 0x30}, //  0xbf 191
    {0x00, 0x38, 0x54, 0x54, 0x54, 0x00}, //  0xc0 192
    {0x00, 0x00, 0x00, 0x7f, 0x41, 0x00}, //  0xc1 193
    {0x00, 0x40, 0x22, 0x14, 0x18, 0x60}, //  0xc2 194
    {0x00, 0x7c, 0x20, 0x20, 0x1c, 0x20}, //  0xc3 195
    {0x00, 0x44, 0x3c, 0x04, 0x7c, 0x44}, //  0xc4 196
    {0x00, 0x40, 0x3c, 0x12, 0x12, 0x0c}, //  0xc5 197
    {0x00, 0x41, 0x63, 0x55, 0x49, 0x41}, //  0xc6 198
    {0x00, 0x38, 0x44, 0x44, 0x3c, 0x04}, //  0xc7 199
    {0x00, 0x08, 0x04, 0x3c, 0x44, 0x24}, //  0xc8 200
    {0x00, 0x08, 0x14, 0x7f, 0x14, 0x08}, //  0xc9 201
    {0x00, 0x4e, 0x71, 0x01, 0x71, 0x4e}, //  0xca 202
    {0x00, 0x45, 0x29, 0x11, 0x29, 0x45}, //  0xcb 203
    {0x00, 0x0d, 0x51, 0x51, 0x51, 0x3d}, //  0xcc 204
    {0x00, 0x00, 0x00, 0x05, 0x02, 0x05}, //  0xcd 205
    {0x00, 0x40, 0x00, 0x40, 0x00, 0x40}, //  0xce 206
    {0x00, 0x00, 0x08, 0x1c, 0x3e, 0x00}, //  0xcf 207
    {0x00, 0x1c, 0x1c, 0x1c, 0x00, 0x00}, //  0xd0 208
    {0x00, 0x00, 0x70, 0x08, 0x07, 0x00}, //  0xd1 209
    {0x00, 0x00, 0x08, 0x08, 0x08, 0x00}, //  0xd2 210
    {0x00, 0x00, 0x1d, 0x15, 0x17, 0x00}, //  0xd3 211
    {0x00, 0x00, 0x07, 0x05, 0x07, 0x00}, //  0xd4 212
    {0x00, 0x00, 0x11, 0x15, 0x0a, 0x00}, //  0xd5 213
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //  0xd6 214
    {0x00, 0x04, 0x3c, 0x41, 0x20, 0x00}, // 0xd7 215
    {0x00, 0x7c, 0x16, 0x15, 0x16, 0x08}, //  0xd8 216
    {0x00, 0x21, 0x16, 0x08, 0x34, 0x42}, //  0xd9 217
    {0x00, 0x7f, 0x09, 0x1d, 0x01, 0x03}, //  0xda 218
    {0x00, 0x38, 0x54, 0x54, 0x14, 0x08}, //  0xdb 219
    {0x00, 0x00, 0x00, 0x7c, 0x40, 0x40}, //  0xdc 220
    {0x00, 0x7f, 0x0e, 0x1c, 0x38, 0x7f}, //  0xdd 221
    {0x00, 0x41, 0x22, 0x5d, 0x22, 0x1c}, //  0xde 222
    {0x00, 0x1c, 0x3e, 0x1c, 0x08, 0x00}, //  0xdf 223
    {0x00, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f}, //  0xe0 224
    {0x00, 0x77, 0x7b, 0x01, 0x7b, 0x77}, //  0xe1 225
    {0x00, 0x7f, 0x43, 0x75, 0x43, 0x7f}, //  0xe2 226
    {0x00, 0x7f, 0x6f, 0x55, 0x43, 0x7f}, //  0xe3 227
    {0x00, 0x40, 0x40, 0x40, 0x40, 0x40}, //  0xe4 228
    {0x00, 0x44, 0x42, 0x5f, 0x42, 0x44}, //  0xe5 229
    {0x00, 0x40, 0x5e, 0x45, 0x5e, 0x40}, //  0xe6 230
    {0x00, 0x40, 0x48, 0x55, 0x5e, 0x40}, //0xe7 231
    {0x00, 0x00, 0x04, 0x08, 0x10, 0x20}, // 0xe8 232
    {0x00, 0x03, 0x07, 0x0e, 0x1c, 0x38}, //  0xe9 233
    {0x00, 0x01, 0x03, 0x07, 0x0f, 0x1f}, //  0xea 234
    {0x00, 0x7c, 0x78, 0x70, 0x60, 0x40}, //  0xeb 235
    {0x00, 0x08, 0x08, 0x1c, 0x22, 0x1c}, //  0xec 236
    {0x00, 0x00, 0x1c, 0x22, 0x1c, 0x00}, //  0xed 237
    {0x00, 0x02, 0x00, 0x08, 0x00, 0x20}, //  0xee 238
    {0x00, 0x04, 0x3e, 0x3f, 0x3e, 0x04}, //  0xef 239
    {0x00, 0x10, 0x3e, 0x7e, 0x3e, 0x10}, //  0xf0 240
    {0x00, 0x55, 0x2a, 0x55, 0x2a, 0x55}, //  0xf1 241
    {0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12}, //  0xf2 242
    {0x00, 0x04, 0x1e, 0x1f, 0x1e, 0x04}, //
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
  };
  int extraSpacing = 0; // extra spacing between letters

  for (int i = 0; i < n; i++)
  { // for each character in "chars"...
    char letter = chars.charAt(i); // get corresponding letter
    //Serial.print("" + letter.toInt());
    char locs[6] = {};
    memcpy(locs, charset[letter], 6); //array of hex codes for each row of pixels in the letter
    //      System.out.println("L: " + letter + "; HC: " + letter.hashCode());
    if (letter == 32)//if the character is a space (" ")...
    {
      extraSpacing -= 3;//reduce the spacing
    }
    for (int c = 0; c < sizeof(locs); c++) // for each column...
    {
      int r = 0; // intialized row count
      for (int j = 1; j <= 256; j *= 2) // for each pixel/binary in the row...
      {
        if (((locs[c]) & j) != 0) //if the pixel should be on...
        {

          setPixel(r + row, c + col + extraSpacing, red, green, blue);//turn the pixel on
        }

        r++;//increase the row count
      }
    }
    extraSpacing += 6; //add spacing between letters
  }

}